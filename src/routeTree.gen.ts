/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjekteIndexRouteImport } from './routes/projekte/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as LebenslaufIndexRouteImport } from './routes/lebenslauf/index'
import { Route as ImpressumIndexRouteImport } from './routes/impressum/index'
import { Route as ContactIndexRouteImport } from './routes/contact/index'
import { Route as AboutmeIndexRouteImport } from './routes/aboutme/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjekteIndexRoute = ProjekteIndexRouteImport.update({
  id: '/projekte/',
  path: '/projekte/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const LebenslaufIndexRoute = LebenslaufIndexRouteImport.update({
  id: '/lebenslauf/',
  path: '/lebenslauf/',
  getParentRoute: () => rootRouteImport,
} as any)
const ImpressumIndexRoute = ImpressumIndexRouteImport.update({
  id: '/impressum/',
  path: '/impressum/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactIndexRoute = ContactIndexRouteImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutmeIndexRoute = AboutmeIndexRouteImport.update({
  id: '/aboutme/',
  path: '/aboutme/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/aboutme': typeof AboutmeIndexRoute
  '/contact': typeof ContactIndexRoute
  '/impressum': typeof ImpressumIndexRoute
  '/lebenslauf': typeof LebenslaufIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/projekte': typeof ProjekteIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/aboutme': typeof AboutmeIndexRoute
  '/contact': typeof ContactIndexRoute
  '/impressum': typeof ImpressumIndexRoute
  '/lebenslauf': typeof LebenslaufIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/projekte': typeof ProjekteIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/aboutme/': typeof AboutmeIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/impressum/': typeof ImpressumIndexRoute
  '/lebenslauf/': typeof LebenslaufIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projekte/': typeof ProjekteIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/aboutme'
    | '/contact'
    | '/impressum'
    | '/lebenslauf'
    | '/projects'
    | '/projekte'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/aboutme'
    | '/contact'
    | '/impressum'
    | '/lebenslauf'
    | '/projects'
    | '/projekte'
  id:
    | '__root__'
    | '/'
    | '/aboutme/'
    | '/contact/'
    | '/impressum/'
    | '/lebenslauf/'
    | '/projects/'
    | '/projekte/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutmeIndexRoute: typeof AboutmeIndexRoute
  ContactIndexRoute: typeof ContactIndexRoute
  ImpressumIndexRoute: typeof ImpressumIndexRoute
  LebenslaufIndexRoute: typeof LebenslaufIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjekteIndexRoute: typeof ProjekteIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projekte/': {
      id: '/projekte/'
      path: '/projekte'
      fullPath: '/projekte'
      preLoaderRoute: typeof ProjekteIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lebenslauf/': {
      id: '/lebenslauf/'
      path: '/lebenslauf'
      fullPath: '/lebenslauf'
      preLoaderRoute: typeof LebenslaufIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/impressum/': {
      id: '/impressum/'
      path: '/impressum'
      fullPath: '/impressum'
      preLoaderRoute: typeof ImpressumIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/aboutme/': {
      id: '/aboutme/'
      path: '/aboutme'
      fullPath: '/aboutme'
      preLoaderRoute: typeof AboutmeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutmeIndexRoute: AboutmeIndexRoute,
  ContactIndexRoute: ContactIndexRoute,
  ImpressumIndexRoute: ImpressumIndexRoute,
  LebenslaufIndexRoute: LebenslaufIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjekteIndexRoute: ProjekteIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
